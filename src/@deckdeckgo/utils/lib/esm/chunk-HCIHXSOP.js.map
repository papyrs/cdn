{
  "version": 3,
  "sources": ["../../src/image.utils.ts"],
  "sourcesContent": ["export function lazyLoadSelectedImages(images: HTMLElement[]): Promise<void> {\n  return new Promise<void>((resolve) => {\n    if (!images) {\n      resolve();\n      return;\n    }\n\n    images.forEach((image: HTMLElement) => {\n      if (image.hasAttribute('data-src')) {\n        image.setAttribute('src', `${image.getAttribute('data-src')}`);\n        image.removeAttribute('data-src');\n\n        // If image is part of a reveal group, let it be revealed with the reveal feature\n        if (!image.classList.contains('deckgo-reveal')) {\n          image.style.setProperty('visibility', 'inherit');\n        }\n      }\n\n      // Furthermore to lazy loading, we set pointer-events to none. Doing so we prevent images of being dragged.\n      image.style.setProperty('pointer-events', 'none');\n    });\n\n    resolve();\n  });\n}\n\n// For simplicity reason we do not import the dependency here\ninterface HTMLDeckgoLazyImgElement extends HTMLElement {\n  lazyLoad: () => Promise<void>;\n}\n\nexport const lazyLoadSelectedLazyImagesComponent = async (components: HTMLElement[]): Promise<void> => {\n  const promises: Promise<void>[] = components.map((cmp: HTMLElement) => (cmp as HTMLDeckgoLazyImgElement).lazyLoad());\n  await Promise.all(promises);\n};\n"],
  "mappings": "AAAO,WAAgC,EAAsC,CAC3E,MAAO,IAAI,SAAc,AAAC,GAAY,CACpC,GAAI,CAAC,EAAQ,CACX,IACA,OAGF,EAAO,QAAQ,AAAC,GAAuB,CACrC,AAAI,EAAM,aAAa,aACrB,GAAM,aAAa,MAAO,GAAG,EAAM,aAAa,eAChD,EAAM,gBAAgB,YAGjB,EAAM,UAAU,SAAS,kBAC5B,EAAM,MAAM,YAAY,aAAc,YAK1C,EAAM,MAAM,YAAY,iBAAkB,UAG5C,MASG,GAAM,GAAsC,KAAO,IAA6C,CACrG,GAAM,GAA4B,EAAW,IAAI,AAAC,GAAsB,EAAiC,YACzG,KAAM,SAAQ,IAAI",
  "names": []
}
