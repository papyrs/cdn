{
  "version": 3,
  "sources": ["../../src/utils.ts"],
  "sourcesContent": ["export function unifyEvent(e: any): any {\n  return e.changedTouches ? e.changedTouches[0] : e;\n}\n\nexport function debounce(func: Function, timeout?: number) {\n  let timer: NodeJS.Timer | undefined;\n\n  return (...args: any[]) => {\n    const next = () => func(...args);\n\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = setTimeout(next, timeout && timeout > 0 ? timeout : 300);\n  };\n}\n\nexport function isMobile(): boolean {\n  if (!window) {\n    return false;\n  }\n\n  const isTouchScreen: boolean = window.matchMedia('(any-pointer:coarse)').matches;\n  const isMouseScreen: boolean = window.matchMedia('(any-pointer:fine)').matches;\n\n  return isTouchScreen && !isMouseScreen;\n}\n\nexport function isIOS(): boolean {\n  if (!window || !navigator) {\n    return false;\n  }\n\n  const a: string = userAgent();\n\n  return /iPhone|iPod/i.test(a) || isIPad();\n}\n\nexport function isIPad(): boolean {\n  if (!window || !navigator) {\n    return false;\n  }\n\n  const a: string = userAgent();\n\n  // iOS 12 and below\n  if (/iPad/i.test(a)) {\n    return true;\n  }\n\n  // iOS 13+\n  return /Macintosh/i.test(a) && isMobile();\n}\n\nexport function isFullscreen(): boolean {\n  return (\n    // @ts-ignore\n    // prettier-ignore\n    !!(document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement)\n  );\n}\n\nexport function isFirefox(): boolean {\n  if (!window || !navigator) {\n    return false;\n  }\n\n  const a: string = userAgent();\n\n  return /firefox/i.test(a);\n}\n\nexport const isSafari = (): boolean => /apple/i.test(navigator.vendor);\n\nexport function isRTL(): boolean {\n  const htmlDir: string | null = document.documentElement.getAttribute('dir');\n  return htmlDir !== null && htmlDir === 'rtl';\n}\n\n// Source: Ionic ionic-framework/angular/src/providers/platform.ts\n\nexport function isLandscape(): boolean {\n  return !isPortrait();\n}\n\nexport function isPortrait(): boolean {\n  if (!window) {\n    return false;\n  }\n\n  return window.matchMedia && window.matchMedia('(orientation: portrait)').matches;\n}\n\n// Source: Ionic ionic-framework/core/src/utils/platform.ts\n\nexport const isAndroid = (): boolean => {\n  if (!window) {\n    return false;\n  }\n\n  const a: string = userAgent();\n\n  return /android|sink/i.test(a);\n};\n\nexport const isAndroidTablet = (): boolean => {\n  if (!window) {\n    return false;\n  }\n\n  const a: string = userAgent();\n\n  return isAndroid() && !/mobile/i.test(a);\n};\n\nconst userAgent = (): string => {\n  return navigator.userAgent || navigator.vendor || (window as any).opera;\n};\n"],
  "mappings": "AAAO,WAAoB,EAAa,CACtC,MAAO,GAAE,eAAiB,EAAE,eAAe,GAAK,EAG3C,WAAkB,EAAgB,EAAkB,CACzD,GAAI,GAEJ,MAAO,IAAI,IAAgB,CACzB,GAAM,GAAO,IAAM,EAAK,GAAG,GAE3B,AAAI,GACF,aAAa,GAGf,EAAQ,WAAW,EAAM,GAAW,EAAU,EAAI,EAAU,MAIzD,YAA6B,CAClC,GAAI,CAAC,OACH,MAAO,GAGT,GAAM,GAAyB,OAAO,WAAW,wBAAwB,QACnE,EAAyB,OAAO,WAAW,sBAAsB,QAEvE,MAAO,IAAiB,CAAC,EAGpB,YAA0B,CAC/B,GAAI,CAAC,QAAU,CAAC,UACd,MAAO,GAGT,GAAM,GAAY,IAElB,MAAO,eAAe,KAAK,IAAM,IAG5B,YAA2B,CAChC,GAAI,CAAC,QAAU,CAAC,UACd,MAAO,GAGT,GAAM,GAAY,IAGlB,MAAI,QAAQ,KAAK,GACR,GAIF,aAAa,KAAK,IAAM,IAG1B,YAAiC,CACtC,MAGE,CAAC,CAAE,UAAS,mBAAqB,SAAS,sBAAwB,SAAS,yBAA2B,SAAS,qBAI5G,YAA8B,CACnC,GAAI,CAAC,QAAU,CAAC,UACd,MAAO,GAGT,GAAM,GAAY,IAElB,MAAO,WAAW,KAAK,GAGlB,GAAM,GAAW,IAAe,SAAS,KAAK,UAAU,QAExD,YAA0B,CAC/B,GAAM,GAAyB,SAAS,gBAAgB,aAAa,OACrE,MAAO,KAAY,MAAQ,IAAY,MAKlC,YAAgC,CACrC,MAAO,CAAC,IAGH,YAA+B,CACpC,MAAK,QAIE,OAAO,YAAc,OAAO,WAAW,2BAA2B,QAHhE,GAQJ,GAAM,GAAY,IAAe,CACtC,GAAI,CAAC,OACH,MAAO,GAGT,GAAM,GAAY,IAElB,MAAO,gBAAgB,KAAK,IAGjB,EAAkB,IAAe,CAC5C,GAAI,CAAC,OACH,MAAO,GAGT,GAAM,GAAY,IAElB,MAAO,MAAe,CAAC,UAAU,KAAK,IAGlC,EAAY,IACT,UAAU,WAAa,UAAU,QAAW,OAAe",
  "names": []
}
