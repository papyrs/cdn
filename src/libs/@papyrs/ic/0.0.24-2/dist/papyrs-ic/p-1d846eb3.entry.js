import{r as i,h as t}from"./p-ee0b2015.js";import{e as s}from"./p-73cd87c9.js";import{E as n,i as e,h as r,e as o}from"./p-e9d6f70b.js";const a=class{constructor(t){i(this,t),this.publicKey=void 0,this.signInInProgress=!1,this.trustedOrigin=void 0,this.onSignIn=()=>{this.tab=window.open(this.identityProviderUrl.toString(),"idpWindow")}}componentWillLoad(){n.getInstance().set(this.config),this.identityProviderUrl=new URL(void 0!==n.getInstance().get().localIdentityCanisterId?`http://${n.getInstance().get().localIdentityCanisterId}.localhost:8000`:e),this.identityProviderUrl.hash="#authorize"}componentDidLoad(){parent.postMessage({kind:"papyrs-signin-ready"},"*")}async onMessage({data:i,origin:t}){const{kind:s}=null!=i?i:{};if(s)switch("papyrs-signin-init"===s?await this.assertOriginSSO(t):(this.assertOriginTrusted(),this.assertOriginII(t)),s){case"papyrs-signin-init":return void this.onPapyrsInit({origin:t,data:i});case"authorize-ready":return void this.onInternetIdentityReady();case"authorize-client-failure":return void this.onInternetIdentityFailure(i);case"authorize-client-success":return void this.onInternetIdentitySuccess(i)}}assertOriginTrusted(){if(!1===this.trustedOrigin)throw new Error("Previous calls were emitted from a not trusted origin and therefore this service shall not be used.");if(void 0===this.trustedOrigin)throw new Error("The origin has not been initialized and therefore we cannot tell if this message can be trusted or not.")}assertOriginII(i){const{origin:t}=new URL(this.identityProviderUrl);if(t!==i)throw new Error("An authentication message was not provided by Internet Identity!")}async assertOriginSSO(i){const{host:t}=new URL(i);if(t.endsWith("papy.rs"))return void(this.trustedOrigin=!0);const n=t.split(".")[0];if(!/([a-zA-Z0-9]{5}-){4}[a-zA-Z0-9]{3}/.test(n))throw this.trustedOrigin=!1,new Error(`Origin (${i}) of the message is not a canister and therefore, shall not use this signin.`);const e=new s,o=await r({identity:e});if(this.trustedOrigin=await o.knownBucket(n,"storage"),!0!==this.trustedOrigin)throw new Error(`Caller origin (${i}) is not a valid Papyrs origin and has no right to use this signin.`)}onPapyrsInit({origin:i,data:{key:t}}){this.parentOrigin=i,this.publicKey=t}onInternetIdentityReady(){if(!this.tab||"ready"!==this.signInState())return void this.error("Authentication not ready.");this.signInInProgress=!0;const i={kind:"authorize-client",sessionPublicKey:new Uint8Array(this.publicKey),maxTimeToLive:o},{origin:t}=this.identityProviderUrl;this.tab.postMessage(i,t)}onInternetIdentityFailure({text:i}){var t;null===(t=this.tab)||void 0===t||t.close(),this.error(i),this.cleanUp()}error(i){this.parentPostMessage({kind:"papyrs-signin-error",text:i}),this.signInInProgress=!1}parentPostMessage(i){if(!this.parentOrigin)return console.error("No parent origin"),void(this.signInInProgress=!1);parent.postMessage(i,this.parentOrigin)}onInternetIdentitySuccess({delegations:i,userPublicKey:t}){var s;this.parentPostMessage({kind:"papyrs-signin-success",delegations:i,userPublicKey:t}),null===(s=this.tab)||void 0===s||s.close(),this.signInInProgress=!1,this.cleanUp()}cleanUp(){this.trustedOrigin=void 0,this.publicKey=void 0}signInState(){return void 0===this.publicKey||void 0===this.parentOrigin||void 0===this.identityProviderUrl?"initializing":this.signInInProgress?"in-progress":"ready"}render(){return t("ic-signin",{i18n:this.i18n,config:this.config,externalSignInState:this.signInState(),signIn:this.onSignIn},t("div",{slot:"spinner"},t("slot",{name:"spinner"})))}};export{a as ic_signin_proxy}